(bool? #t) (bool? #f) (bool? 12)
(integer? 1) (integer? 2.0)
(float? 1) (float? 2.0)
(string? 1) (string? "abc")
(number? 1) (number? 2.0)
(null? '()) (null? '(1 2 3))
(define f (lambda () (+ 1 2))) (procedure? f)
(define (f x) (+ x)) (procedure? f)
(caar '((1 2) 3 4)) (cadr '((1 2) 3 4))
(cdar '((1 2) 3 4)) (cddr '((1 2) 3 4))
(caaar '(((1 2) 3) 5 6))

(zero? 1) (zero? 0)
(positive? 1) (positive? 0) (positive? -1)
(negative? -1) (negative? 0) (negative? 1)

(sum 1 2 3)
(gcd 32 -36) (gcd)
(lcm 32 -36) (lcm)
(map (curry + 2) '(1 2 3 4))
(filter even? '(1 2 3 4))